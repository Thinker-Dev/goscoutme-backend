// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-musl-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profiles {
  id             Int                      @id @default(autoincrement())
  public_id      String                   @unique
  first_name     String
  photo_url      String?
  last_name      String
  email          String                   @unique
  sex            UserSexOptions           @default(NOT_SPECIEFIED)
  birth_date     DateTime
  account_status UserAccountStatusOptions @default(INATIVE)
  nationality    CountriesOptions         @default(NOT_SPECIEFIED)
  sport_id       Int?
  phone          String?
  mobile         String?
  organization   UserOrganization?
  affiliations   String?
  address        String?
  sport          Sports?                  @relation(fields: [sport_id], references: [id], onDelete: NoAction)
  athlete        UserAthleteProfile?
  scout          UserScoutProfile?
  notifications  Notifications[]
}

model UserAthleteProfile {
  id                Int                    @id @default(autoincrement())
  profile_id        Int                    @unique
  profile           Profiles               @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  citzenship        CountriesOptions[]     @default([NOT_SPECIEFIED])
  age               Int
  height            Float
  height_metric     HeightOptions          @default(CM)
  weight            Float
  weight_metric     WeightOptions          @default(KG)
  status            AthleteStatusOptions   @default(NOT_SPECIEFIED)
  leagues_played    String?
  guardians         UserGuardian[]
  appointmenst      UserAppointments[]
  media             UserMedia[]
  career_statistics UserCareerStatistics?
  sport_position_id Int?
  league_played     String?
  scouts_notes      ScoutNotes[]
  sport_position    SportPosition?         @relation(fields: [sport_position_id], references: [id], onDelete: NoAction)
  sport_attributes  UserSportsAttributes[]
}

model Notifications {
  id         Int                        @id @default(autoincrement())
  message    String
  status     NotificationsStatusOptions @default(OPEN)
  created_at DateTime                   @default(now())
  updated_at DateTime                   @updatedAt
  profile_id Int
  profiles   Profiles                   @relation(fields: [profile_id], references: [id], onDelete: Cascade)
}

model UserCareerStatistics {
  id                  Int                @id @default(autoincrement())
  athlete_id          Int                @unique
  athlete             UserAthleteProfile @relation(fields: [athlete_id], references: [id], onDelete: Cascade)
  game_appearances    Int                @default(0)
  minutes_played      Int                @default(0)
  game_started        Int                @default(0)
  field_goals         Int                @default(0)
  attribute_update_at DateTime           @updatedAt
}

model UserSportsAttributes {
  athlete_id          Int
  athlete             UserAthleteProfile @relation(fields: [athlete_id], references: [id])
  attributes          SportsAttributes   @relation(fields: [sport_attributes_id], references: [id])
  sport_attributes_id Int

  @@id([athlete_id, sport_attributes_id])
}

model SportPosition {
  id       Int                  @unique
  sport_id Int
  sport    Sports               @relation(fields: [sport_id], references: [id])
  name     String
  athlete  UserAthleteProfile[]
}

model UserScoutProfile {
  id           Int                @id @default(autoincrement())
  profile_id   Int                @unique
  profile      Profiles           @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  scouts_notes ScoutNotes[]
  appointments UserAppointments[]
}

model UserGuardian {
  id           Int                @id @default(autoincrement())
  name         String
  relationship String
  profile_id   Int
  profile      UserAthleteProfile @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  consent_form String
}

model Sports {
  id             Int                @id @default(autoincrement())
  public_id      String             @unique @default(uuid())
  name           String
  attibutes      SportsAttributes[]
  sport_position SportPosition[]
  user           Profiles[]
}

model SportsAttributes {
  id       Int                    @id @default(autoincrement())
  name     String
  sport_id Int
  sport    Sports                 @relation(fields: [sport_id], references: [id], onDelete: Cascade)
  athlete  UserSportsAttributes[]
}

model UserOrganization {
  id               Int      @id @default(autoincrement())
  org_name         String?
  org_email        String?
  org_phone        String?
  org_mobile       String?
  org_document_url String?
  profile_id       Int      @unique
  profile          Profiles @relation(fields: [profile_id], references: [id], onDelete: Cascade)
}

model UserMedia {
  id         Int                @id @default(autoincrement())
  athlete_id Int
  athlete    UserAthleteProfile @relation(fields: [athlete_id], references: [id], onDelete: Cascade)
  name       String
  type       MediaOptions
  media_url  String
}

model UserAppointments {
  athlete_id  Int
  scout_id    Int
  title       String
  description String
  duration    String
  scheduled   DateTime
  athlete     UserAthleteProfile @relation(fields: [athlete_id], references: [id], onDelete: Cascade)
  scout       UserScoutProfile   @relation(fields: [scout_id], references: [id], onDelete: Cascade)

  @@id([athlete_id, scout_id, scheduled])
}

model ScoutNotes {
  scout_id    Int
  athlete_id  Int
  scout       UserScoutProfile   @relation(fields: [scout_id], references: [id], onDelete: Cascade)
  athlete     UserAthleteProfile @relation(fields: [athlete_id], references: [id], onDelete: Cascade)
  scout_notes String?
  color_tag   tagOptions         @default(NONE)

  @@id([scout_id, athlete_id])
}

enum UserSexOptions {
  NOT_SPECIEFIED
  MALE
  FEMALE
}

enum CountriesOptions {
  NOT_SPECIEFIED
  AFGHANISTAN
  ALBANIA
  ALGERIA
  ANDORRA
  ANGOLA
  ANTIGUA_AND_BARBUDA
  ARGENTINA
  ARMENIA
  AUSTRALIA
  AUSTRIA
  AZERBAIJAN
  BAHAMAS
  BAHRAIN
  BANGLADESH
  BARBADOS
  BELARUS
  BELGIUM
  BELIZE
  BENIN
  BHUTAN
  BOLIVIA
  BOSNIA_AND_HERZEGOVINA
  BOTSWANA
  BRAZIL
  BRUNEI
  BULGARIA
  BURKINA_FASO
  BURUNDI
  CABO_VERDE
  CAMBODIA
  CAMEROON
  CANADA
  CENTRAL_AFRICAN_REPUBLIC
  CHAD
  CHILE
  CHINA
  COLOMBIA
  COMOROS
  CONGO_DEMOCRATIC_REPUBLIC
  CONGO_REPUBLIC
  COSTA_RICA
  CROATIA
  CUBA
  CYPRUS
  CZECH_REPUBLIC
  DENMARK
  DJIBOUTI
  DOMINICA
  DOMINICAN_REPUBLIC
  EAST_TIMOR
  ECUADOR
  EGYPT
  EL_SALVADOR
  EQUATORIAL_GUINEA
  ERITREA
  ESTONIA
  ESWATINI
  ETHIOPIA
  FIJI
  FINLAND
  FRANCE
  GABON
  GAMBIA
  GEORGIA
  GERMANY
  GHANA
  GREECE
  GRENADA
  GUATEMALA
  GUINEA
  GUINEA_BISSAU
  GUYANA
  HAITI
  HONDURAS
  HUNGARY
  ICELAND
  INDIA
  INDONESIA
  IRAN
  IRAQ
  IRELAND
  ISRAEL
  ITALY
  IVORY_COAST
  JAMAICA
  JAPAN
  JORDAN
  KAZAKHSTAN
  KENYA
  KIRIBATI
  KOSOVO
  KUWAIT
  KYRGYZSTAN
  LAOS
  LATVIA
  LEBANON
  LESOTHO
  LIBERIA
  LIBYA
  LIECHTENSTEIN
  LITHUANIA
  LUXEMBOURG
  MADAGASCAR
  MALAWI
  MALAYSIA
  MALDIVES
  MALI
  MALTA
  MARSHALL_ISLANDS
  MAURITANIA
  MAURITIUS
  MEXICO
  MICRONESIA
  MOLDOVA
  MONACO
  MONGOLIA
  MONTENEGRO
  MOROCCO
  MOZAMBIQUE
  MYANMAR
  NAMIBIA
  NAURU
  NEPAL
  NETHERLANDS
  NEW_ZEALAND
  NICARAGUA
  NIGER
  NIGERIA
  NORTH_KOREA
  NORTH_MACEDONIA
  NORWAY
  OMAN
  PAKISTAN
  PALAU
  PALESTINE
  PANAMA
  PAPUA_NEW_GUINEA
  PARAGUAY
  PERU
  PHILIPPINES
  POLAND
  PORTUGAL
  QATAR
  ROMANIA
  RUSSIA
  RWANDA
  SAINT_KITTS_AND_NEVIS
  SAINT_LUCIA
  SAINT_VINCENT_AND_THE_GRENADINES
  SAMOA
  SAN_MARINO
  SAO_TOME_AND_PRINCIPE
  SAUDI_ARABIA
  SENEGAL
  SERBIA
  SEYCHELLES
  SIERRA_LEONE
  SINGAPORE
  SLOVAKIA
  SLOVENIA
  SOLOMON_ISLANDS
  SOMALIA
  SOUTH_AFRICA
  SOUTH_KOREA
  SOUTH_SUDAN
  SPAIN
  SRI_LANKA
  SUDAN
  SURINAME
  SWEDEN
  SWITZERLAND
  SYRIA
  TAIWAN
  TAJIKISTAN
  TANZANIA
  THAILAND
  TOGO
  TONGA
  TRINIDAD_AND_TOBAGO
  TUNISIA
  TURKEY
  TURKMENISTAN
  TUVALU
  UGANDA
  UKRAINE
  UNITED_ARAB_EMIRATES
  UNITED_KINGDOM
  UNITED_STATES
  URUGUAY
  UZBEKISTAN
  VANUATU
  VATICAN_CITY
  VENEZUELA
  VIETNAM
  YEMEN
  ZAMBIA
  ZIMBABWE
}

enum MediaOptions {
  VIDEO
  IMAGE
}

enum HeightOptions {
  CM
  FT
}

enum WeightOptions {
  KG
  LB
}

enum tagOptions {
  RED
  ORANGE
  YELLOW
  GREEN
  BLUE
  PURPLE
  GRAY
  NONE
  WHITE
}

enum AthleteStatusOptions {
  NOT_SPECIEFIED
  PROFESSIONAL
  AMATEUR
}

enum UserAccountStatusOptions {
  ACTIVE
  INATIVE
}

enum NotificationsStatusOptions {
  VIEWED
  OPEN
}
